// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql" // or "postgresql" or any other supported database
  url      = env("DATABASE_URL")
}

model Evento {
  id                            Int      @id @default(autoincrement())
  data_visitacao                DateTime
  valor_inteira                 Float?
  ingressos_disponiveis         Int?
  ingressos_isencao_disponiveis Int?
  disponibilidade_ilimitada     Boolean  @default(false)
  pedidos                       Pedido[]

  @@map("evento")
}

model Pedido {
  id                  Int           @id @default(autoincrement())
  usuario_id          Int?
  evento_id           Int?
  pedido_data         DateTime      @default(now())
  pedido_valor_pago   Float?
  ingresso_codigo     String?       @unique
  ingresso_utilizacao DateTime?
  ingresso_tipo       IngressoTipo?
  NomeEvento          String

  evento  Evento?  @relation(fields: [evento_id], references: [id], onDelete: SetNull, onUpdate: Cascade)
  usuario Usuario? @relation(fields: [usuario_id], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@map("pedido")
}

model Usuario {
  id            Int          @id @default(autoincrement())
  email         String?      @unique
  senha         String
  cpf           String?      @unique
  nascimento    DateTime?
  nome_completo String?
  sexo          Sexo?
  telefone      String?
  tipo          UsuarioTipo?
  usuario       String?      @unique
  pedidos       Pedido[]

  @@map("usuario")
}

enum IngressoTipo {
  Inteira
  MeiaEntrada
  Isencao
  Co
  Vip
}

enum Sexo {
  masculino
  feminino
  outro
}

enum UsuarioTipo {
  Administrador
  Funcionario
  Cliente
}
